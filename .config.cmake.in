# Make variables prefixed with PACKAGE_ available
@PACKAGE_INIT@

# Include SVF targets so that SVF found through find_package(SVF) can use them
include("${CMAKE_CURRENT_LIST_DIR}/SVFTargets.cmake")

# Get the root directory of the source tree this SVF installation was built from
set(SVF_SOURCE_DIR "@PACKAGE_SVF_SOURCE_DIR@")

# Set locations relative to source tree (use set instead of set_and_check as this could be moved)
set(SVF_CORE_ROOT "@PACKAGE_SVF_CORE_ROOT@")
set(SVF_CORE_SRCS "@PACKAGE_SVF_CORE_SRCS@")
set(SVF_CORE_INCLUDES "@PACKAGE_SVF_CORE_INCLUDES@")

# Do the same for the SvfLLVM library
set(SVF_LLVM_ROOT "@PACKAGE_SVF_LLVM_ROOT@")
set(SVF_LLVM_SRCS "@PACKAGE_SVF_LLVM_SRCS@")
set(SVF_LLVM_TOOLS "@PACKAGE_SVF_LLVM_TOOLS@")
set(SVF_LLVM_INCLUDES "@PACKAGE_SVF_LLVM_INCLUDES@")

# Set the installed structures relative to this package's installation location
set_and_check(SVF_INSTALL_BINDIR "@PACKAGE_SVF_INSTALL_BINDIR@")
set_and_check(SVF_INSTALL_LIBDIR "@PACKAGE_SVF_INSTALL_LIBDIR@")
set_and_check(SVF_INSTALL_INCLUDEDIR "@PACKAGE_SVF_INSTALL_INCLUDEDIR@")

# Finally configure where the ExtAPI bitcode file was installed
set_and_check(SVF_INSTALL_EXTAPI_DIR "@PACKAGE_SVF_EXTAPI_INSTALL_DIR@")
set_and_check(SVF_INSTALL_EXTAPI_FILE "@PACKAGE_SVF_EXTAPI_INSTALL_FILE@")

# Lastly derive exposed settings about SVF's build configuration
set(SVF_SANITIZE "@SVF_SANITIZE@")
set(SVF_COVERAGE "@SVF_COVERAGE@")
set(SVF_WARN_AS_ERROR "@SVF_WARN_AS_ERROR@")
set(SVF_EXPORT_DYNAMIC "@SVF_EXPORT_DYNAMIC@")
set(SVF_ENABLE_ASSERTIONS "@SVF_ENABLE_ASSERTIONS@")
set(SVF_ENABLE_OPAQUE_POINTERS "@SVF_ENABLE_OPAQUE_POINTERS@")

# Expose some additional build flags like the C++ version and such
set(SVF_BUILD_TYPE "@CMAKE_BUILD_TYPE@")
set(SVF_ENABLE_RTTI "@SVF_ENABLE_RTTI@")
set(SVF_CXX_STANDARD "@CMAKE_CXX_STANDARD@")
set(SVF_ENABLE_EXCEPTIONS "@SVF_ENABLE_EXCEPTIONS@")

# Check components so that SVF_FOUND will be false if any weren't found
check_required_components("@PROJECT_NAME@")
