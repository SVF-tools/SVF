@PACKAGE_INIT@
include(CMakeFindDependencyMacro)
include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")

# Expose the settings of this SVF build tree
set(SVF_SANITIZE @SVF_SANITIZE@ CACHE STRING "")
set(SVF_USE_PIC @SVF_USE_PIC@ CACHE BOOL "")
set(SVF_USE_LTO @SVF_USE_LTO@ CACHE BOOL "")
set(SVF_USE_LLD @SVF_USE_LLD@ CACHE BOOL "")
set(SVF_COVERAGE @SVF_COVERAGE@ CACHE BOOL "")
set(SVF_DEBUG_INFO @SVF_DEBUG_INFO@ CACHE BOOL "")
set(SVF_ENABLE_RTTI @SVF_ENABLE_RTTI@ CACHE BOOL "")
set(SVF_WARN_AS_ERROR @SVF_WARN_AS_ERROR@ CACHE BOOL "")
set(SVF_EXPORT_DYNAMIC @SVF_EXPORT_DYNAMIC@ CACHE BOOL "")
set(SVF_ENABLE_ASSERTIONS @SVF_ENABLE_ASSERTIONS@ CACHE BOOL "")
set(SVF_ENABLE_EXCEPTIONS @SVF_ENABLE_EXCEPTIONS@ CACHE BOOL "")

# Also expose some compilation settings and configurations
set(SVF_BUILD_TYPE @CMAKE_BUILD_TYPE@)
set(SVF_SHARED_LIBS @BUILD_SHARED_LIBS@)
set(SVF_CXX_STANDARD @CMAKE_CXX_STANDARD@)

# Expose the installation directory tree users of the package
set(SVF_INSTALL_BINDIR "@PACKAGE_SVF_INSTALL_BINDIR@")
set(SVF_INSTALL_LIBDIR "@PACKAGE_SVF_INSTALL_LIBDIR@")
set(SVF_INSTALL_EXTAPIDIR "@PACKAGE_SVF_INSTALL_EXTAPIDIR@")
set(SVF_INSTALL_INCLUDEDIR "@PACKAGE_SVF_INSTALL_INCLUDEDIR@")
set(SVF_INSTALL_PKGCONFDIR "@PACKAGE_SVF_INSTALL_PKGCONFDIR@")
set(SVF_INSTALL_CMAKECONFIGDIR "@PACKAGE_SVF_INSTALL_CMAKECONFIGDIR@")

# Set location of extapi.bc (relocatable & installed)
set_target_properties(
    SVF::SvfCore PROPERTIES INTERFACE_COMPILE_DEFINITIONS SVF_INSTALL_EXTAPI_BC="@PACKAGE_SVF_INSTALL_EXTAPI_BC@"
    )

# Find Z3 in the same way SVF did (if through a CMake package)
find_package(Z3 CONFIG HINTS ${Z3_DIR} $ENV{Z3_DIR})

# Use system-wide Z3 package if found; otherwise search locally & define local target
if(Z3_FOUND)
    set(z3_lib z3::libz3)
else()
    # Find the library files & header; these must succeed
    find_library(
        Z3_LIB_DIRS REQUIRED
        NAMES z3 libz3.a libz3.so
        HINTS ${Z3_DIR} ENV Z3_DIR
        )
    find_path(
        Z3_INCLUDE_DIRS REQUIRED
        NAMES z3++.h
        HINTS ${Z3_DIR} ENV Z3_DIR
        )

    # Manually create an imported target to link against with target_link_libraries
    add_library(z3::libz3 UNKNOWN IMPORTED)
    set_target_properties(z3::libz3 PROPERTIES IMPORTED_LOCATION "${Z3_LIB_DIRS}")
    set_target_properties(z3::libz3 PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${Z3_INCLUDE_DIRS}")
    set(z3_lib z3::libz3)
endif()

# Find & make the LLVM package available
find_package(LLVM CONFIG REQUIRED HINTS ${LLVM_DIR} $ENV{LLVM_DIR})

separate_arguments(LLVM_DEFINITIONS_LIST NATIVE_COMMAND ${LLVM_DEFINITIONS})
include_directories(SYSTEM ${LLVM_INCLUDE_DIRS})
link_directories(${LLVM_LIBRARY_DIRS})
add_definitions(${LLVM_DEFINITIONS})

check_required_components("@PROJECT_NAME@")
