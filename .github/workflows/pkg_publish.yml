name: svf-publish

# Triggers the workflow on pushed to master ( merged ) 
on: 
  push:
    branches:
      - master
      
# Customize the env variable
env:
  SVF_CTIR: 1 
  SVF_Z3: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    steps:
      # checkout the repo
      - uses: actions/checkout@v2
      # setup the environment 
      - name: env-setup
        run: |
          echo $RUNNER_OS
          if [ "$RUNNER_OS" = "Linux" ]; then sudo apt-get update       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then sudo apt-get update       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then sudo apt-get install cmake gcc g++ nodejs doxygen graphviz; fi
          if [ "$RUNNER_OS" = "macOS" ]; then export SDKROOT="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.1.sdk" ; fi
          git config --global user.email ${{secrets.npm_email}}
          git config --global user.name "GitHub Actions Build"
          
      # build-svf
      - name: build-svf
        run: |
          cd $GITHUB_WORKSPACE
          git stash --all
          echo $(pwd)
          npm_version=`npm v svf-tools version`
          if [ "$RUNNER_OS" = "Linux" ]; then sed  -i '/version/s/[^:]*$/'"\"${npm_version}\",/" package.json  ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then git add .    ; fi
          if [ "$RUNNER_OS" = "Linux" ] && [ -n "$(git status -s)" ]; then git commit -m'update version'  ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then npm version patch; fi
          git clone "https://github.com/SVF-tools/Test-Suite.git"
          . ./build.sh
          
      # update doxygen
      - name: update-doxygen
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then cd $GITHUB_WORKSPACE/doc && doxygen doxygen.config; fi
          if [ "$RUNNER_OS" = "Linux" ]; then cd $GITHUB_WORKSPACE  && git clone https://github.com/SVF-tools/SVF-doxygen.git       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then cp -r $GITHUB_WORKSPACE/doc/generated-doc/html $GITHUB_WORKSPACE/SVF-doxygen/html       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then cd $GITHUB_WORKSPACE/SVF-doxygen       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then git add .       ; fi
          if [ "$RUNNER_OS" = "Linux" ] && [ -n "$(git status -s)" ]; then git commit -m"update SVF doxygen"       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then git push https://yuleisui:${{secrets.yulei_git_key}}@github.com/SVF-tools/SVF-doxygen.git   HEAD:master       ; fi
      
  
      # run ctest
      - name: ctest
        working-directory: ${{github.workspace}}/Release-build
        run: ctest -VV
      # update-svf-lib
      - name: update-svf-lib
        run: |
          cd $GITHUB_WORKSPACE
          cd ..
          git clone https://github.com/SVF-tools/SVF-npm.git
          if [ "$RUNNER_OS" = "Linux" ]; then export osVersion="linux"; fi
          if [ "$RUNNER_OS" = "macOS" ]; then export osVersion="osx"; fi
          echo $osVersion
          cp -rf $GITHUB_WORKSPACE/include ./SVF-npm/SVF-${osVersion}/
          cp $GITHUB_WORKSPACE/Release-build/lib/libSvf.a ./SVF-npm/SVF-${osVersion}/Release-build/lib
          cp $GITHUB_WORKSPACE/Release-build/lib/CUDD/libCudd.a ./SVF-npm/SVF-${osVersion}/Release-build/lib/CUDD
          cd SVF-npm
          git add . 
          if [ -n "$(git status -s)" ]; then git commit -m'update svflib' ; fi
          npm version patch
          git push https://yuleisui:${{secrets.yulei_git_key}}@github.com/SVF-tools/SVF-npm.git   HEAD:master
          cd $GITHUB_WORKSPACE
      # publish svf
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: publish-svf
        run: if [ "$RUNNER_OS" = "Linux" ]; then npm publish; fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
