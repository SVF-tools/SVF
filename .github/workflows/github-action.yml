name: svf-build

# Triggers the workflow on push or pull request events
on: [push, pull_request]

# Customize the env variable
env:
  SVF_CTIR: 1 
  SVF_Z3: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-11]
    steps:
      # checkout the repo
      - uses: actions/checkout@v2
      # setup the environment
      - name: mac-setup
        if: runner.os == 'macOS'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 12.5.1
      - name: mac-setup-workaround
        if: runner.os == 'macOS'
        run: ln -sfn /Applications/Xcode_12.5.1.app /Applications/Xcode.app
      - name: ubuntu-setup
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install cmake gcc g++ nodejs doxygen graphviz
      - name: env-setup
        run: |
          echo $RUNNER_OS
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then 
            git config --global user.email ${{secrets.npm_email}}
            git config --global user.name "GitHub Actions Build"
          fi
      
      # build-svf
      - name: build-svf
        run: |
          cd $GITHUB_WORKSPACE
          echo $(pwd)
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then 
            git stash --all 
            npm_version=`npm v svf-tools version`  
            if [ "$RUNNER_OS" = "Linux" ]; then
              sed  -i '/version/s/[^:]*$/'"\"${npm_version}\",/" package.json
              git add . 
              if [ -n "$(git status -s)" ]; then git commit -m'update version'  ; fi
              npm version patch
            fi 
          fi
          git clone "https://github.com/SVF-tools/Test-Suite.git";
          ${{github.workspace}}/build.sh

      # run ctest
      - name: ctest points-to
        working-directory: ${{github.workspace}}/Release-build
        run: 
          ctest -R points-to -VV
      
      - name: ctest differential analysis
        working-directory: ${{github.workspace}}/Release-build
        run: 
          ctest -R diff_tests -VV

      - name: ctest mem_leak
        working-directory: ${{github.workspace}}/Release-build
        run:
          ctest -R mem_leak -VV

      # update doxygen
      - name: update-doxygen
        run: |
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then 
            cd $GITHUB_WORKSPACE/doc && doxygen doxygen.config
            cd $GITHUB_WORKSPACE  && git clone https://github.com/SVF-tools/SVF-doxygen.git       
            cp -r $GITHUB_WORKSPACE/doc/generated-doc/html $GITHUB_WORKSPACE/SVF-doxygen/html       
            cd $GITHUB_WORKSPACE/SVF-doxygen       
            git add .       
            if [ -n "$(git status -s)" ]; then git commit -m"update SVF doxygen"       ; fi
            git push https://yuleisui:${{secrets.yulei_git_key}}@github.com/SVF-tools/SVF-doxygen.git   HEAD:master       
          fi
      
      # update-svf-lib
      - name: update-svf-lib
        run: |
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then 
            cd $GITHUB_WORKSPACE        
            cd ..     
            git clone https://github.com/SVF-tools/SVF-npm.git
            if [ "$RUNNER_OS" = "Linux" ]; then export osVersion="linux"; fi
            if [ "$RUNNER_OS" = "macOS" ]; then export osVersion="osx"; fi
            echo $osVersion  
            cp -rf $GITHUB_WORKSPACE/include ./SVF-npm/SVF-${osVersion}/       
            cp $GITHUB_WORKSPACE/Release-build/lib/libSvf.a ./SVF-npm/SVF-${osVersion}/Release-build/lib        
            cp $GITHUB_WORKSPACE/Release-build/lib/CUDD/libCudd.a ./SVF-npm/SVF-${osVersion}/Release-build/lib/CUDD       
            cd SVF-npm
            git add .      
            if [ -n "$(git status -s)" ]; then git commit -m'update svflib' ; fi
            npm version patch     
            git push https://yuleisui:${{secrets.yulei_git_key}}@github.com/SVF-tools/SVF-npm.git   HEAD:master
            cd $GITHUB_WORKSPACE      
          fi

      # publish svf
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: publish-svf
        run: if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then npm publish; fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  
